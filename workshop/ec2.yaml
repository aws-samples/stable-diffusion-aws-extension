AWSTemplateFormatVersion: '2010-09-09'
Description: (SO8032) - Stable-Diffusion AWS Extension Workshop - EC2 Instance
Parameters:
  Branch:
    Description: Branch of the ESD to deploy
    Type: String
    AllowedValues:
      - main
      - dev
    Default: main

Mappings:
  RegionToAmiId:
    ap-south-1:
      AMI: ami-03f4878755434977f
    eu-north-1:
      AMI: ami-0014ce3e52359afbd
    eu-west-3:
      AMI: ami-01d21b7be69801c2f
    eu-west-2:
      AMI: ami-0e5f882be1900e43b
    eu-west-1:
      AMI: ami-0905a3c97561e0b69
    ap-northeast-3:
      AMI: ami-05ff0b3a7128cd6f8
    ap-northeast-2:
      AMI: ami-0f3a440bbcff3d043
    ap-northeast-1:
      AMI: ami-07c589821f2b353aa
    ca-central-1:
      AMI: ami-0a2e7efb4257c0907
    sa-east-1:
      AMI: ami-0fb4cf3a99aa89f72
    ap-east-1:
      AMI: ami-0d96ec8a788679eb2
    ap-southeast-1:
      AMI: ami-0fa377108253bf620
    ap-southeast-2:
      AMI: ami-04f5097681773b989
    eu-central-1:
      AMI: ami-0faab6bdbac9486fb
    us-east-1:
      AMI: ami-0c7217cdde317cfec
    us-east-2:
      AMI: ami-05fb0b8c1424f266b
    us-west-1:
      AMI: ami-0ce2cb35386fc22e9
    us-west-2:
      AMI: ami-008fe2fc65df48dac

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub ${AWS::StackName}-sg
      GroupDescription: Security group for SD WebUI EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 7860
          ToPort: 7860
          CidrIp: 0.0.0.0/0
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: c5.2xlarge
      ImageId: !FindInMap [RegionToAmiId, !Ref AWS::Region, AMI]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 300
            VolumeType: gp2
      "Tags" : [
        {"Key" : "Name", "Value" : !Sub "sd-on-aws-${Branch}"},
      ]
      SecurityGroups:
        - Ref: SecurityGroup
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash
          set -euxo pipefail
          
          sudo apt-get update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt install wget git python3.10 python3.10-venv build-essential net-tools libgl1 libtcmalloc-minimal4 -y
          sudo update-alternatives --install /usr/bin/python3 python /usr/bin/python3.10 1
          
          cd /home/ubuntu
          
          curl -sSL https://raw.githubusercontent.com/awslabs/stable-diffusion-aws-extension/${Branch}/install.sh | bash
          
          cd stable-diffusion-webui/extensions/stable-diffusion-aws-extension
          git checkout ${Branch}
          cd ../../
          
          wget -qP models/Stable-diffusion/ https://huggingface.co/marcy1111/majicmixRealistic_v7/resolve/main/majicmixRealistic_v7.safetensors
          wget -qP models/ControlNet/ https://huggingface.co/lllyasviel/ControlNet-v1-1/resolve/main/control_v11p_sd15_canny.pth
          wget -qP models/ControlNet/ https://huggingface.co/lllyasviel/ControlNet-v1-1/resolve/main/control_v11p_sd15_openpose.pth
          wget -qP models/Lora/ https://aws-gcr-solutions-us-east-1.s3.us-east-1.amazonaws.com/extension-for-stable-diffusion-on-aws/models/Lora/lcm_lora_1_5.safetensors
          
          sudo chown -R ubuntu:ubuntu /home/ubuntu/stable-diffusion-webui
          
          cat > sd-webui.service <<EOF
          [Unit]
          Description=Stable Diffusion UI server
          After=network.target
          StartLimitIntervalSec=0

          [Service]
          WorkingDirectory=/home/ubuntu/stable-diffusion-webui
          ExecStart=/home/ubuntu/stable-diffusion-webui/webui.sh --enable-insecure-extension-access --skip-torch-cuda-test --no-half --listen
          Type=simple
          Restart=always
          RestartSec=3
          User=ubuntu
          StartLimitAction=reboot

          [Install]
          WantedBy=default.target

          EOF
          sudo mv sd-webui.service /etc/systemd/system
          sudo chown root:root /etc/systemd/system/sd-webui.service

          sudo systemctl enable sd-webui.service
          sudo systemctl start sd-webui.service

  MyEIP:
    Type: AWS::EC2::EIP
  MyEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt MyEIP.AllocationId
      InstanceId: !Ref EC2Instance

Outputs:
  WebUIURL:
    Description: URL for Stable Diffusion Web UI
    # add port 7860 to the end of the URL
    Value: !Sub http://${MyEIP}:7860
