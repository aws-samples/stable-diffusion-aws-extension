AWSTemplateFormatVersion: '2010-09-09'
Description: (SO8032) - Extension for Comfy on AWS - EC2 Instance
Parameters:
  Branch:
    Description: Branch of the Comfy to deploy
    Type: String
    AllowedValues:
      - main
      - dev
    Default: dev
  ApiURL:
    Description: API URL
    Type: String
    MinLength: 1
  ApiToken:
    Description: API Token
    Type: String
    MinLength: 1
  InstanceType:
    Description: EC2 Instance Type of the Comfy to deploy
    Type: String
    AllowedValues:
      - c5.2xlarge
      - c5.4xlarge
      - g5.2xlarge
      - g5.4xlarge
    Default: g5.2xlarge

Mappings:
  RegionToAmiId:
    ap-south-1:
      AMI: ami-03f4878755434977f
    eu-north-1:
      AMI: ami-0014ce3e52359afbd
    eu-west-3:
      AMI: ami-01d21b7be69801c2f
    eu-west-2:
      AMI: ami-0e5f882be1900e43b
    eu-west-1:
      AMI: ami-0905a3c97561e0b69
    ap-northeast-3:
      AMI: ami-05ff0b3a7128cd6f8
    ap-northeast-2:
      AMI: ami-0f3a440bbcff3d043
    ap-northeast-1:
      AMI: ami-07c589821f2b353aa
    ca-central-1:
      AMI: ami-0a2e7efb4257c0907
    sa-east-1:
      AMI: ami-0fb4cf3a99aa89f72
    ap-east-1:
      AMI: ami-0d96ec8a788679eb2
    ap-southeast-1:
      AMI: ami-0fa377108253bf620
    ap-southeast-2:
      AMI: ami-04f5097681773b989
    eu-central-1:
      AMI: ami-0faab6bdbac9486fb
    us-east-1:
      AMI: ami-0c7217cdde317cfec
    us-east-2:
      AMI: ami-05fb0b8c1424f266b
    us-west-1:
      AMI: ami-0ce2cb35386fc22e9
    us-west-2:
      AMI: ami-008fe2fc65df48dac

Resources:
  ComfyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true

  ComfySubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref ComfyVPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true

  ComfyInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ec2.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess

  ComfyInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - Ref: ComfyInstanceRole

  ComfySecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref ComfyVPC
      GroupName: !Sub ${AWS::StackName}-sg
      GroupDescription: Security group for SD WebUI EC2 instance
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 7860
          ToPort: 7860
          CidrIp: 0.0.0.0/0

  ComfyInternetGateway:
    Type: AWS::EC2::InternetGateway

  ComfyVPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref ComfyVPC
      InternetGatewayId: !Ref ComfyInternetGateway

  ComfyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref ComfyVPC

  ComfyRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref ComfyRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref ComfyInternetGateway

  ComfySubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref ComfySubnet
      RouteTableId: !Ref ComfyRouteTable

  ComfyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      IamInstanceProfile: !Ref ComfyInstanceProfile
      SubnetId: !Ref ComfySubnet
      ImageId: !FindInMap [ RegionToAmiId, !Ref AWS::Region, AMI ]
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 1024
            VolumeType: gp3
      SecurityGroupIds:
        - !GetAtt ComfySecurityGroup.GroupId
      Tags: [
        { "Key": "Name", "Value": !Sub "comfy-on-aws-${Branch}" },
      ]
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash
          set -euxo pipefail
          
          echo "export COMFY_API_URL=${ApiURL}" > /home/ubuntu/.bashrc
          echo "export COMFY_API_TOKEN=${ApiToken}" >> //home/ubuntu/.bashrc
          source /home/ubuntu/.bashrc
          
          sudo apt-get update
          
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt install wget git python3.10 python3.10-venv python3-dev build-essential net-tools libgl1 libtcmalloc-minimal4 -y
          sudo update-alternatives --install /usr/bin/python3 python /usr/bin/python3.10 1
          
          cd /home/ubuntu
          
          git clone https://github.com/comfyanonymous/ComfyUI.git
          git clone https://github.com/awslabs/stable-diffusion-aws-extension.git --branch ${Branch} --single-branch
          cp stable-diffusion-aws-extension/build_scripts/comfy/comfy_local_proxy.py ComfyUI/custom_nodes/
          
          cd /home/ubuntu/ComfyUI || exit 1
          
          python3 -m venv venv
          
          source venv/bin/activate
          
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
          python -m pip install boto3
          python -m pip install aws_xray_sdk
          python -m pip install altair
          python -m pip install fastapi
          python -m pip install uvicorn
          python -m pip install torch==2.0.1 torchvision==0.15.2 --extra-index-url https://download.pytorch.org/whl/cu118
          python -m pip install https://github.com/openai/CLIP/archive/d50d76daa670286dd6cacf3bcd80b5e4823fc8e1.zip
          python -m pip install https://github.com/mlfoundations/open_clip/archive/bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b.zip
          python -m pip install open-clip-torch==2.20.0
          
          sudo chown -R ubuntu:ubuntu /home/ubuntu/ComfyUI
          
          cat > comfy.service <<EOF
          [Unit]
          Description=Comfy Service
          After=network.target
          StartLimitIntervalSec=0

          [Service]
          WorkingDirectory=/home/ubuntu/ComfyUI
          ExecStart=python3 main.py
          Type=simple
          Restart=always
          RestartSec=3
          User=ubuntu
          StartLimitAction=reboot

          [Install]
          WantedBy=default.target

          EOF
          sudo mv comfy.service /etc/systemd/system
          sudo chown root:root /etc/systemd/system/comfy.service
          sudo systemctl enable comfy.service
          sudo systemctl start comfy.service

  WebUiEIP:
    Type: AWS::EC2::EIP
  WebUiEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt WebUiEIP.AllocationId
      InstanceId: !Ref ComfyEC2Instance

Outputs:
  WebUIURL:
    Description: URL for Comfy WebUI
    Value: !Sub http://${WebUiEIP}:8080
