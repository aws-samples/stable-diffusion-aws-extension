{
  "openapi": "3.0.1",
  "info": {
    "title": "Extension-for-Stable-Diffusion-on-AWS",
    "description": "Extension for Stable Diffusion on AWS API - dev",
    "version": "dev"
  },
  "servers": [
    {
      "url": "https://{ApiId}.execute-api.{Region}.{Domain}/prod/",
      "variables": {
        "ApiId": {
          "default": "xxxxxx"
        },
        "Region": {
          "default": "ap-northeast-1"
        },
        "Domain": {
          "default": "amazonaws.com"
        }
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "operationId": "RootAPI",
        "responses": {
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RootAPIResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffusi-RootApilambdaA93AFF7C-jOsoi8ztLtQH/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Root API (RootAPI)",
        "tags": [
          "Service"
        ],
        "parameters": []
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/api": {
      "get": {
        "operationId": "GetApiOAS",
        "responses": {
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApiOASResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffusio-ApiDoclambda652963C2-dyZLDZyDoaEo/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get OAS (GetApiOAS)",
        "tags": [
          "Service"
        ],
        "parameters": []
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/checkpoints": {
      "get": {
        "operationId": "ListCheckpoints",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": null,
            "description": "Filter by username",
            "required": false
          },
          {
            "name": "per_page",
            "in": "query",
            "schema": null,
            "description": "Limit Per Page",
            "required": false
          },
          {
            "name": "page",
            "in": "query",
            "schema": null,
            "description": "Page Index",
            "required": false
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListCheckpointsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-ListCheckPointslambda52E-CUKymXGnHWaq/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Checkpoints (ListCheckpoints)",
        "tags": [
          "Checkpoints"
        ]
      },
      "post": {
        "operationId": "CreateCheckpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCheckPointRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckpointResponse"
                }
              }
            }
          },
          "202": {
            "description": "202 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateCheckpointUrlResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateCheckPointlambdaF7-7UzmAxkKBAcT/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Checkpoint (CreateCheckpoint)",
        "tags": [
          "Checkpoints"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteCheckpoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteCheckpoints"
              }
            }
          },
          "required": true
        },
        "responses": {
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteCheckpointslambdaE-2coJTkrxhKRQ/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Checkpoints (DeleteCheckpoints)",
        "tags": [
          "Checkpoints"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/checkpoints/{id}": {
      "put": {
        "operationId": "UpdateCheckpoint",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": null,
            "description": "Dataset Name"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCheckPoint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCheckpointResponse"
                }
              }
            }
          },
          "202": {
            "description": "202 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateCheckpointNameResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-UpdateCheckPointlambdaB0-5bdxYQKZgrkF/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Update Checkpoint (UpdateCheckpoint)",
        "tags": [
          "Checkpoints"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/config": {
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/datasets": {
      "get": {
        "operationId": "ListDatasets",
        "parameters": [
          {
            "name": "exclusive_start_key",
            "in": "query",
            "schema": null,
            "description": "Exclusive Start Key",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": null,
            "description": "Limit Per Page",
            "required": false
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListDatasetsResponse"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-ListDatasetslambda67F227-Ldl4NLyoWuAO/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Datasets (ListDatasets)",
        "tags": [
          "Datasets"
        ]
      },
      "post": {
        "operationId": "CreateDataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateDatasetResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateDatasetlambdaE4C5E-TAVNCx22US4i/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Dataset (CreateDataset)",
        "tags": [
          "Datasets"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteDatasets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteDatasets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteDatasetslambda4ED0-ms7LipmnD2cV/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Datasets (DeleteDatasets)",
        "tags": [
          "Datasets"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/datasets/{id}": {
      "get": {
        "operationId": "GetDataset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": null,
            "description": "Dataset Name"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDatasetResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-GetDatasetlambda5273A45E-YphmqyY7gGxe/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get Dataset (GetDataset)",
        "tags": [
          "Datasets"
        ]
      },
      "put": {
        "operationId": "UpdateDataset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": null,
            "description": "Dataset Name"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateDatasetsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-UpdateDatasetlambda285EA-ls4VVjW0GFGK/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Update Dataset (UpdateDataset)",
        "tags": [
          "Datasets"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/datasets/{id}/crop": {
      "post": {
        "operationId": "CropDataset",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": null,
            "description": "Dataset Name"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CropDataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "202": {
            "description": "202 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CropDatasetResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CropDatasetlambda3D2CD9C-yDSJtFwuKsRs/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create new Crop Dataset (CropDataset)",
        "tags": [
          "Datasets"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/endpoints": {
      "get": {
        "operationId": "ListEndpoints",
        "parameters": [
          {
            "name": "exclusive_start_key",
            "in": "query",
            "schema": null,
            "description": "Exclusive Start Key",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": null,
            "description": "Limit Per Page",
            "required": false
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListEndpointsResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-ListEndpointslambdaF82AC-thH3eTqsVt34/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Endpoints (ListEndpoints)",
        "tags": [
          "Endpoints"
        ]
      },
      "post": {
        "operationId": "CreateEndpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEndpoint"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "202": {
            "description": "202 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateEndpointResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateEndpointlambda9B92-i1aL8g3BNhRZ/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Endpoint (CreateEndpoint)",
        "tags": [
          "Endpoints"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteEndpoints",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEndpoints"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteEndpointslambdaF54-k2kWaagf7EHn/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Endpoints (DeleteEndpoints)",
        "tags": [
          "Endpoints"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/executes": {
      "get": {
        "operationId": "ListExecutes",
        "parameters": [
          {
            "name": "exclusive_start_key",
            "in": "query",
            "schema": null,
            "description": "Exclusive Start Key",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": null,
            "description": "Limit Per Page",
            "required": false
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListExecutesResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-QueryExecutelambda02DC05-xRSjUdytSCKL/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Executes (ListExecutes)",
        "tags": [
          "Executes"
        ]
      },
      "post": {
        "operationId": "CreateExecute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Execute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateExecuteResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffusi-Executelambda723A5B87-zFS6TwPOY1Vl/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Execute (CreateExecute)",
        "tags": [
          "Executes"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteExecutes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteExecutesApi"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteExecutesApilambda9-qDHXwiFFdHwv/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Executes (DeleteExecutes)",
        "tags": [
          "Executes"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/executes/{id}": {
      "get": {
        "operationId": "GetExecute",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": null,
            "description": "ID"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetExecuteResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-GetExecutelambda150CA75A-OopCFOnr3Elz/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get Execute (GetExecute)",
        "tags": [
          "Executes"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/inferences": {
      "get": {
        "operationId": "ListInferences",
        "parameters": [
          {
            "name": "exclusive_start_key",
            "in": "query",
            "schema": null,
            "description": "Exclusive Start Key",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "schema": null,
            "description": "Inference task type: txt2img, img2img",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": null,
            "description": "Limit Per Page",
            "required": false
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListInferencesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-ListInferenceJobslambda5-BDsmpSnhZLD1/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Inferences (ListInferences)",
        "tags": [
          "Inferences"
        ]
      },
      "post": {
        "operationId": "CreateInferenceJob",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInferenceJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInferenceJobRealtimeResponse"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInferenceJobResponse"
                }
              }
            }
          },
          "202": {
            "description": "202 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateInferenceJobAsyncResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          },
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateInferenceJoblambda-mlPy8HB9EB0o/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Inference Job (CreateInferenceJob)",
        "tags": [
          "Inferences"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteInferenceJobs",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteInferenceJobs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteInferenceJobslambd-68Rg6Nl9kQvJ/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Inference Jobs (DeleteInferenceJobs)",
        "tags": [
          "Inferences"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/inferences/{id}": {
      "get": {
        "operationId": "GetInferenceJob",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": null,
            "description": "ID"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInferenceJobResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-GetInferenceJoblambda4B9-tbUYbYyVlMAw/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get Inference Job (GetInferenceJob)",
        "tags": [
          "Inferences"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/inferences/{id}/start": {
      "put": {
        "operationId": "StartInferences",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": null,
            "description": "ID"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "504": {
            "description": "504 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/504"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartInferenceJobRealtimeResponse"
                }
              }
            }
          },
          "202": {
            "description": "202 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StartInferenceJobAsyncResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-StartInferenceJoblambda2-0OCl169cOwgG/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Start Inference Job (StartInferences)",
        "tags": [
          "Inferences"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/merge": {
      "post": {
        "operationId": "MergeExecute",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MergeExecute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-MergeExecutelambda6DF527-RGWZEWHU47BF/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "MergeExecute",
        "tags": [
          "Others"
        ],
        "parameters": []
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/model": {
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/node": {
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/ping": {
      "get": {
        "operationId": "Ping",
        "responses": {
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PingResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffusion--Pinglambda324263A8-FQeoKh0xxTEO/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Ping API (Ping)",
        "tags": [
          "Service"
        ],
        "parameters": []
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/prepare": {
      "post": {
        "operationId": "CreatePrepare",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Prepare"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffusi-PreparelambdaFDD8F005-9ssbcLrE2zlM/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Prepare (CreatePrepare)",
        "tags": [
          "Prepare"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/prepare/{id}": {
      "get": {
        "operationId": "GetPrepare",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-GetPreparelambda08CC9414-F5TV1qTZSVbq/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get Prepare (GetPrepare)",
        "tags": [
          "Prepare"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/roles": {
      "get": {
        "operationId": "ListRoles",
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListRolesResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffu-ListRoleslambda07097DF5-qMjAJBKeGKkh/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Roles (ListRoles)",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "post": {
        "operationId": "CreateRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateRoleResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateRolelambda12D93D44-dfh2bbnJ08OT/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Role (CreateRole)",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteRoles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRoles"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteRoleslambdaCE7CB86-ODJJTrhJd3sp/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Roles (DeleteRoles)",
        "tags": [
          "Roles"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/sync": {
      "post": {
        "operationId": "SyncMessage",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SyncMsg"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffusi-SyncMsglambda50AF709E-DaqyBhe8khjD/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Sync Message (SyncMessage)",
        "tags": [
          "Sync"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/sync/{id}": {
      "get": {
        "operationId": "GetSyncMessage",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-GetSyncMsglambda9AC8490E-I768VWkxdChB/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get Sync Message (GetSyncMessage)",
        "tags": [
          "Sync"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/template": {
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/trainings": {
      "get": {
        "operationId": "ListTrainings",
        "parameters": [
          {
            "name": "exclusive_start_key",
            "in": "query",
            "schema": null,
            "description": "Exclusive Start Key",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "schema": null,
            "description": "Limit Per Page",
            "required": false
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListTrainingsResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-ListTrainingJobslambda62-ZlRm2i4eE9n0/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Trainings (ListTrainings)",
        "tags": [
          "Trainings"
        ]
      },
      "post": {
        "operationId": "CreateTraining",
        "requestBody": {
          "content": {
            "$default": {
              "schema": {
                "$ref": "#/components/schemas/CreateTrainingJob"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateTrainResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateTrainingJoblambda0-G2E93i7wZhKG/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create Training (CreateTraining)",
        "tags": [
          "Trainings"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteTrainings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTrainingJobs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteTrainingJobslambda-gnEQRtKi3BIh/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Trainings (DeleteTrainings)",
        "tags": [
          "Trainings"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    },
    "/trainings/{id}": {
      "get": {
        "operationId": "GetTraining",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": false,
            "schema": null,
            "description": "ID"
          },
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ],
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTrainResponse"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-GetTrainingJoblambdaEF70-PPMq5Qi3wESw/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Get Training (GetTraining)",
        "tags": [
          "Trainings"
        ]
      },
      "options": {
        "parameters": [],
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ]
      }
    },
    "/users": {
      "get": {
        "operationId": "ListUsers",
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diffu-ListUserslambda4DDAE5BC-nyn6r61sm25H/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "List Users (ListUsers)",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "post": {
        "operationId": "CreateUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "201": {
            "description": "201 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-CreateUserlambda000FE6B1-FuCgQ7q3fWmE/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Create User (CreateUser)",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUsers"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "404 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/400"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/401"
                }
              }
            }
          },
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/204"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ],
        "x-amazon-apigateway-request-validator": "esdapivalidatorb43244ef-j4ky0bbhwswd",
        "x-amazon-apigateway-integration": {
          "type": "aws_proxy",
          "httpMethod": "POST",
          "uri": "arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:448353841126:function:Extension-for-Stable-Diff-DeleteUserslambda86471CA-ys53vAqLIdlV/invocations",
          "passthroughBehavior": "when_no_match"
        },
        "summary": "Delete Users (DeleteUsers)",
        "tags": [
          "Users"
        ],
        "parameters": [
          {
            "name": "username",
            "description": "Username (default: api)",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "default": "api",
              "description": null
            }
          }
        ]
      },
      "options": {
        "responses": {
          "204": {
            "description": "204 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Methods": {
                "schema": {
                  "type": "string"
                }
              },
              "Access-Control-Allow-Headers": {
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {}
          }
        },
        "x-amazon-apigateway-integration": {
          "type": "mock",
          "responses": {
            "default": {
              "statusCode": "204",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,PUT,POST,DELETE,PATCH,HEAD'",
                "method.response.header.Access-Control-Allow-Headers": "'*'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{ statusCode: 200 }"
          },
          "passthroughBehavior": "when_no_match"
        },
        "summary": "",
        "tags": [
          "Others"
        ],
        "parameters": []
      }
    }
  },
  "components": {
    "schemas": {
      "ListCheckpointsResponse": {
        "title": "ListCheckpointsResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "checkpoints",
              "page",
              "pages",
              "per_page",
              "total"
            ],
            "type": "object",
            "properties": {
              "per_page": {
                "type": "integer"
              },
              "total": {
                "type": "integer"
              },
              "pages": {
                "type": "integer"
              },
              "checkpoints": {
                "type": "array",
                "items": {
                  "required": [
                    "allowed_roles_or_users",
                    "created",
                    "id",
                    "name",
                    "s3Location",
                    "status",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "allowed_roles_or_users": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "created": {
                      "type": "string"
                    },
                    "name": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "string",
                      "description": "ID of checkpoint",
                      "format": "uuid"
                    },
                    "s3Location": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of checkpoint",
                      "enum": [
                        "Stable-diffusion",
                        "embeddings",
                        "Lora",
                        "hypernetworks",
                        "ControlNet",
                        "VAE"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of checkpoint"
                    }
                  }
                }
              },
              "page": {
                "type": "integer"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "DeleteUsers": {
        "title": "DeleteUsers",
        "required": [
          "user_name_list"
        ],
        "type": "object",
        "properties": {
          "user_name_list": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string",
              "description": "Username for user"
            }
          }
        }
      },
      "GetInferenceJobResponse": {
        "title": "GetInferenceJob",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "InferenceJobId",
              "createTime",
              "image_names",
              "img_presigned_urls",
              "output_presigned_urls",
              "owner_group_or_role",
              "params",
              "startTime",
              "status",
              "taskType"
            ],
            "type": "object",
            "properties": {
              "owner_group_or_role": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "output_presigned_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "taskType": {
                "type": "string"
              },
              "image_names": {
                "type": "array",
                "items": {
                  "pattern": "^.+\\.*$",
                  "type": "string"
                }
              },
              "InferenceJobId": {
                "type": "string",
                "format": "uuid"
              },
              "payload_string": {
                "type": "string"
              },
              "createTime": {
                "type": "string",
                "format": "date-time"
              },
              "sagemakerRaw": {
                "type": "object"
              },
              "startTime": {
                "type": "string",
                "format": "date-time"
              },
              "params": {
                "required": [
                  "input_body_s3",
                  "sagemaker_inference_endpoint_id",
                  "sagemaker_inference_endpoint_name",
                  "sagemaker_inference_instance_type"
                ],
                "type": "object",
                "properties": {
                  "input_body_s3": {
                    "type": "string",
                    "format": "uri"
                  },
                  "sagemaker_inference_endpoint_id": {
                    "pattern": "^[a-f0-9\\-]{36}$",
                    "type": "string",
                    "description": "ID of Endpoint"
                  },
                  "input_body_presign_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "output_path": {
                    "type": "string"
                  },
                  "sagemaker_inference_instance_type": {
                    "type": "string",
                    "description": "Instance Type"
                  },
                  "sagemaker_inference_endpoint_name": {
                    "type": "string",
                    "description": "Name of endpoint"
                  }
                },
                "additionalProperties": true
              },
              "img_presigned_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "CreateInferenceJobResponse": {
        "title": "CreateInferenceJobResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "inference"
            ],
            "type": "object",
            "properties": {
              "inference": {
                "required": [
                  "api_params_s3_location",
                  "api_params_s3_upload_url",
                  "id",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "models": {
                    "type": "array",
                    "items": {
                      "required": [
                        "id",
                        "name",
                        "type"
                      ],
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "api_params_s3_location": {
                    "type": "string",
                    "format": "uri"
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "api_params_s3_upload_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "type": {
                    "type": "string"
                  }
                },
                "additionalProperties": true
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "PingResponse": {
        "title": "PingResponse",
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        },
        "description": "Response Model for Ping API"
      },
      "GetTrainResponse": {
        "title": "GetTrainingJob",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "type": "object",
            "properties": {
              "job_status": {
                "type": "string",
                "description": "Status of training job"
              },
              "train_type": {
                "type": "string",
                "description": "Training Type"
              },
              "id": {
                "pattern": "^[a-f0-9\\-]{36}$",
                "type": "string",
                "description": "ID of training job"
              },
              "params": {
                "required": [
                  "config_params",
                  "training_params",
                  "training_type"
                ],
                "type": "object",
                "properties": {
                  "training_params": {
                    "type": "object",
                    "description": "Training Parameters"
                  },
                  "training_type": {
                    "type": "string",
                    "description": "Training Type"
                  },
                  "config_params": {
                    "required": [
                      "saving_arguments",
                      "training_arguments"
                    ],
                    "type": "object",
                    "properties": {
                      "training_arguments": {
                        "type": "object",
                        "description": "Training Arguments"
                      },
                      "saving_arguments": {
                        "type": "object",
                        "description": "Saving Arguments"
                      }
                    },
                    "description": "Training Configuration Parameters"
                  }
                },
                "additionalProperties": true,
                "description": "Training Parameters"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "GetApiOASResponse": {
        "title": "ApiDoc",
        "type": "object",
        "additionalProperties": true,
        "description": "Response Model for OAS"
      },
      "ListRolesResponse": {
        "title": "ListRoles",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "last_evaluated_key",
              "roles"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "roles": {
                "type": "array",
                "items": {
                  "required": [
                    "creator",
                    "permissions",
                    "role_name"
                  ],
                  "type": "object",
                  "properties": {
                    "role_name": {
                      "type": "string"
                    },
                    "creator": {
                      "type": "string",
                      "description": "Creator of the dataset"
                    },
                    "permissions": {
                      "type": "array",
                      "description": "Permissions for user",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "ListUsersResponse": {
        "title": "ListUsers",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "last_evaluated_key",
              "users"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "users": {
                "type": "array",
                "items": {
                  "required": [
                    "creator",
                    "password",
                    "permissions",
                    "roles",
                    "username"
                  ],
                  "type": "object",
                  "properties": {
                    "creator": {
                      "type": "string",
                      "description": "Creator of the dataset"
                    },
                    "password": {
                      "type": "string",
                      "description": "Password for user"
                    },
                    "permissions": {
                      "type": "array",
                      "description": "Permissions for user",
                      "items": {
                        "type": "string"
                      }
                    },
                    "roles": {
                      "maxItems": 20,
                      "minItems": 1,
                      "type": "array",
                      "description": "Roles for user",
                      "items": {
                        "minLength": 1,
                        "type": "string"
                      }
                    },
                    "username": {
                      "minLength": 1,
                      "type": "string",
                      "description": "Username for user"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "CreateInferenceJobAsyncResponse": {
        "title": "CreateInferenceJobAsyncResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "InferenceJobId",
              "status"
            ],
            "type": "object",
            "properties": {
              "InferenceJobId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "DeleteExecutesApi": {
        "title": "DeleteExecutesApi",
        "required": [
          "execute_id_list"
        ],
        "type": "object",
        "properties": {
          "execute_id_list": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        }
      },
      "CreateUserResponse": {
        "title": "CreateUser",
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "DeleteInferenceJobs": {
        "title": "DeleteInferenceJobs",
        "required": [
          "inference_id_list"
        ],
        "type": "object",
        "properties": {
          "inference_id_list": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        }
      },
      "ListTrainingsResponse": {
        "title": "ListTrainingJobs",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "last_evaluated_key",
              "trainings"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "trainings": {
                "type": "array",
                "items": {
                  "required": [
                    "created",
                    "id",
                    "modelName",
                    "params",
                    "sagemakerTrainName",
                    "status",
                    "trainType"
                  ],
                  "type": "object",
                  "properties": {
                    "modelName": {
                      "type": "string",
                      "description": "Model Name"
                    },
                    "trainType": {
                      "type": "string",
                      "description": "Training Type"
                    },
                    "created": {
                      "type": "string",
                      "description": "Created Time of Training Job"
                    },
                    "id": {
                      "pattern": "^[a-f0-9\\-]{36}$",
                      "type": "string",
                      "description": "ID of training job"
                    },
                    "sagemakerTrainName": {
                      "type": "string",
                      "description": "Name of SageMaker Training Job"
                    },
                    "params": {
                      "required": [
                        "config_params",
                        "training_params",
                        "training_type"
                      ],
                      "type": "object",
                      "properties": {
                        "training_params": {
                          "type": "object",
                          "description": "Training Parameters"
                        },
                        "training_type": {
                          "type": "string",
                          "description": "Training Type"
                        },
                        "config_params": {
                          "required": [
                            "saving_arguments",
                            "training_arguments"
                          ],
                          "type": "object",
                          "properties": {
                            "training_arguments": {
                              "type": "object",
                              "description": "Training Arguments"
                            },
                            "saving_arguments": {
                              "type": "object",
                              "description": "Saving Arguments"
                            }
                          },
                          "description": "Training Configuration Parameters"
                        }
                      },
                      "additionalProperties": true,
                      "description": "Training Parameters"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of training job"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "CreateEndpointResponse": {
        "title": "CreateEndpointResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "EndpointDeploymentJobId",
              "autoscaling",
              "current_instance_count",
              "custom_extensions",
              "endpoint_name",
              "endpoint_status",
              "endpoint_type",
              "instance_type",
              "max_instance_number",
              "min_instance_number",
              "owner_group_or_role",
              "service_type",
              "startTime"
            ],
            "type": "object",
            "properties": {
              "custom_extensions": {
                "type": "string",
                "description": "Custom Extensions"
              },
              "EndpointDeploymentJobId": {
                "pattern": "^[a-f0-9\\-]{36}$",
                "type": "string",
                "description": "ID of Endpoint"
              },
              "endpoint_name": {
                "type": "string",
                "description": "Name of endpoint"
              },
              "endpoint_status": {
                "type": "string",
                "description": "Status of Endpoint"
              },
              "owner_group_or_role": {
                "type": "array",
                "description": "Owner Group or Role",
                "items": {
                  "type": "string"
                }
              },
              "endpoint_type": {
                "type": "string",
                "description": "Endpoint Type",
                "enum": [
                  "Real-time",
                  "Async"
                ]
              },
              "service_type": {
                "type": "string",
                "description": "Service Type",
                "enum": [
                  "sd",
                  "comfy"
                ]
              },
              "min_instance_number": {
                "pattern": "^[0-9]+$",
                "type": "string",
                "description": "Minimum number of instances"
              },
              "current_instance_count": {
                "pattern": "^[0-9]+$",
                "type": "string",
                "description": "Current number of instances"
              },
              "startTime": {
                "type": "string",
                "description": "Start Time of Endpoint",
                "format": "date-time"
              },
              "autoscaling": {
                "type": "boolean",
                "description": "Autoscaling"
              },
              "instance_type": {
                "type": "string",
                "description": "Instance Type"
              },
              "max_instance_number": {
                "pattern": "^[0-9]+$",
                "type": "string",
                "description": "Maximum number of instances"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              202
            ]
          }
        }
      },
      "ListInferencesResponse": {
        "title": "ListInferenceJobs",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "inferences",
              "last_evaluated_key"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "inferences": {
                "type": "array",
                "items": {
                  "required": [
                    "InferenceJobId",
                    "createTime",
                    "image_names",
                    "inference_type",
                    "owner_group_or_role",
                    "params",
                    "startTime",
                    "status",
                    "taskType"
                  ],
                  "type": "object",
                  "properties": {
                    "inference_type": {
                      "type": "string",
                      "description": "Inference type",
                      "enum": [
                        "Real-time",
                        "Async"
                      ]
                    },
                    "owner_group_or_role": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "taskType": {
                      "type": "string"
                    },
                    "InferenceJobId": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "image_names": {
                      "type": "array",
                      "items": {
                        "pattern": "^.+\\.*$",
                        "type": "string"
                      }
                    },
                    "createTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "params": {
                      "required": [
                        "input_body_s3",
                        "sagemaker_inference_endpoint_id",
                        "sagemaker_inference_endpoint_name",
                        "sagemaker_inference_instance_type"
                      ],
                      "type": "object",
                      "properties": {
                        "input_body_s3": {
                          "type": "string",
                          "format": "uri"
                        },
                        "sagemaker_inference_endpoint_id": {
                          "pattern": "^[a-f0-9\\-]{36}$",
                          "type": "string",
                          "description": "ID of Endpoint"
                        },
                        "input_body_presign_url": {
                          "type": "string",
                          "format": "uri"
                        },
                        "output_path": {
                          "type": "string"
                        },
                        "sagemaker_inference_instance_type": {
                          "type": "string",
                          "description": "Instance Type"
                        },
                        "sagemaker_inference_endpoint_name": {
                          "type": "string",
                          "description": "Name of endpoint"
                        }
                      },
                      "additionalProperties": true
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": true
                }
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "CreateTrainingJob": {
        "title": "CreateTrainingJob",
        "required": [
          "lora_train_type",
          "params"
        ],
        "type": "object",
        "properties": {
          "lora_train_type": {
            "minLength": 1,
            "type": "string"
          },
          "params": {
            "required": [
              "config_params",
              "training_params"
            ],
            "type": "object",
            "properties": {
              "enable_wd14_tagger": {
                "type": "boolean",
                "description": "Enable WD14 Tagger",
                "default": false
              },
              "wd14_tagger_params": {
                "type": "object",
                "properties": {
                  "character_threshold": {
                    "type": "string",
                    "description": "Character threshold",
                    "default": "0"
                  },
                  "general_threshold": {
                    "type": "string",
                    "description": "General threshold",
                    "default": "0"
                  }
                },
                "additionalProperties": true
              },
              "training_params": {
                "required": [
                  "dataset",
                  "fm_type",
                  "model",
                  "training_instance_type"
                ],
                "type": "object",
                "properties": {
                  "model": {
                    "type": "string",
                    "description": "Model"
                  },
                  "dataset": {
                    "type": "string",
                    "description": "Dataset"
                  },
                  "training_instance_type": {
                    "type": "string",
                    "description": "Training instance type"
                  },
                  "fm_type": {
                    "type": "string",
                    "description": "FM type"
                  }
                }
              },
              "config_params": {
                "required": [
                  "saving_arguments",
                  "training_arguments"
                ],
                "type": "object",
                "properties": {
                  "training_arguments": {
                    "required": [
                      "max_train_epochs"
                    ],
                    "type": "object",
                    "properties": {
                      "max_train_epochs": {
                        "type": "integer"
                      }
                    },
                    "description": "Training arguments"
                  },
                  "saving_arguments": {
                    "required": [
                      "output_name",
                      "save_every_n_epochs"
                    ],
                    "type": "object",
                    "properties": {
                      "output_name": {
                        "type": "string",
                        "description": "Output name"
                      },
                      "save_every_n_epochs": {
                        "type": "integer",
                        "description": "Save every n epochs"
                      }
                    },
                    "description": "Saving arguments"
                  }
                }
              }
            }
          }
        }
      },
      "StartInferenceJobRealtimeResponse": {
        "title": "StartInferenceJob",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "type": "object",
            "properties": {
              "owner_group_or_role": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "output_presigned_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "taskType": {
                "type": "string"
              },
              "image_names": {
                "type": "array",
                "items": {
                  "pattern": "^.+\\.*$",
                  "type": "string"
                }
              },
              "InferenceJobId": {
                "type": "string",
                "format": "uuid"
              },
              "payload_string": {
                "type": "string"
              },
              "createTime": {
                "type": "string",
                "format": "date-time"
              },
              "sagemakerRaw": {
                "type": "object"
              },
              "startTime": {
                "type": "string",
                "format": "date-time"
              },
              "params": {
                "required": [
                  "input_body_s3",
                  "sagemaker_inference_endpoint_id",
                  "sagemaker_inference_endpoint_name",
                  "sagemaker_inference_instance_type"
                ],
                "type": "object",
                "properties": {
                  "input_body_s3": {
                    "type": "string",
                    "format": "uri"
                  },
                  "sagemaker_inference_endpoint_id": {
                    "pattern": "^[a-f0-9\\-]{36}$",
                    "type": "string",
                    "description": "ID of Endpoint"
                  },
                  "input_body_presign_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "output_path": {
                    "type": "string"
                  },
                  "sagemaker_inference_instance_type": {
                    "type": "string",
                    "description": "Instance Type"
                  },
                  "sagemaker_inference_endpoint_name": {
                    "type": "string",
                    "description": "Name of endpoint"
                  }
                },
                "additionalProperties": true
              },
              "img_presigned_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "SyncMsg": {
        "title": "SyncMsg",
        "type": "object",
        "additionalProperties": true
      },
      "GetDatasetResponse": {
        "title": "GetDatasetResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "data",
              "datasetName",
              "dataset_name",
              "description",
              "prefix",
              "s3",
              "status",
              "timestamp"
            ],
            "type": "object",
            "properties": {
              "s3": {
                "type": "string",
                "description": "S3 location of dataset",
                "format": "uri"
              },
              "data": {
                "type": "array",
                "items": {
                  "required": [
                    "dataStatus",
                    "key",
                    "name",
                    "original_file_name",
                    "preview_url",
                    "type"
                  ],
                  "type": "object",
                  "properties": {
                    "preview_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "name": {
                      "type": "string"
                    },
                    "dataStatus": {
                      "type": "string"
                    },
                    "original_file_name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    }
                  }
                }
              },
              "prefix": {
                "type": "string",
                "description": "Prefix of dataset"
              },
              "datasetName": {
                "type": "string",
                "description": "Name of dataset"
              },
              "description": {
                "type": "string",
                "description": "Description of dataset"
              },
              "dataset_name": {
                "type": "string",
                "description": "Name of dataset"
              },
              "status": {
                "type": "string",
                "description": "Status of dataset"
              },
              "timestamp": {
                "type": "string",
                "description": "Timestamp of dataset"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "ListDatasetsResponse": {
        "title": "ListDatasetsResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "datasets",
              "last_evaluated_key"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "datasets": {
                "type": "array",
                "items": {
                  "required": [
                    "datasetName",
                    "description",
                    "s3",
                    "status",
                    "timestamp"
                  ],
                  "type": "object",
                  "properties": {
                    "s3": {
                      "type": "string",
                      "description": "S3 location of dataset",
                      "format": "uri"
                    },
                    "datasetName": {
                      "type": "string",
                      "description": "Name of dataset"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of dataset"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of dataset"
                    },
                    "timestamp": {
                      "type": "string",
                      "description": "Timestamp of dataset"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "GetExecuteResponse": {
        "title": "GetExecuteResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "create_time",
              "endpoint_name",
              "inference_type",
              "need_sync",
              "output_path",
              "prompt_id",
              "prompt_params",
              "prompt_path",
              "start_time",
              "status"
            ],
            "type": "object",
            "properties": {
              "inference_type": {
                "type": "string",
                "description": "Inference type",
                "enum": [
                  "Real-time",
                  "Async"
                ]
              },
              "prompt_params": {
                "type": "object",
                "additionalProperties": true
              },
              "start_time": {
                "type": "string",
                "format": "date-time"
              },
              "create_time": {
                "type": "string",
                "format": "date-time"
              },
              "endpoint_name": {
                "type": "string",
                "description": "Name of endpoint"
              },
              "output_path": {
                "type": "string"
              },
              "prompt_path": {
                "type": "string",
                "description": "Prompt Path"
              },
              "prompt_id": {
                "type": "string",
                "description": "Prompt ID",
                "format": "uuid"
              },
              "need_sync": {
                "type": "boolean",
                "description": "Need Sync"
              },
              "status": {
                "type": "string",
                "description": "Status of Execute"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "CreateDataset": {
        "title": "CreateDataset",
        "required": [
          "content",
          "creator",
          "dataset_name",
          "prefix"
        ],
        "type": "object",
        "properties": {
          "creator": {
            "minLength": 1,
            "type": "string"
          },
          "prefix": {
            "minLength": 0,
            "type": "string",
            "default": ""
          },
          "dataset_name": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Za-z][A-Za-z0-9_-]*$",
            "type": "string"
          },
          "params": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string"
              }
            }
          },
          "content": {
            "maxItems": 500,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "minLength": 1,
                  "type": "string"
                },
                "name": {
                  "minLength": 1,
                  "type": "string"
                },
                "type": {
                  "minLength": 1,
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "CreateTrainResponse": {
        "title": "CreateTrainingJob",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "type": "object",
            "properties": {
              "debug": {
                "title": "Response Model Debug",
                "required": [
                  "function_url",
                  "log_url",
                  "trace_url"
                ],
                "type": "object",
                "properties": {
                  "trace_url": {
                    "type": "string",
                    "description": "URL to X-Ray Trace",
                    "format": "uri"
                  },
                  "function_url": {
                    "type": "string",
                    "description": "URL to Lambda Function",
                    "format": "uri"
                  },
                  "log_url": {
                    "type": "string",
                    "description": "URL to CloudWatch Logs",
                    "format": "uri"
                  }
                },
                "description": "Debugging information for Lambda Function"
              },
              "data": {
                "required": [
                  "created",
                  "id",
                  "input_location",
                  "output_location",
                  "params",
                  "status"
                ],
                "type": "object",
                "properties": {
                  "input_location": {
                    "type": "string"
                  },
                  "created": {
                    "type": "string",
                    "description": "Created Time of Training Job"
                  },
                  "output_location": {
                    "type": "string"
                  },
                  "id": {
                    "pattern": "^[a-f0-9\\-]{36}$",
                    "type": "string",
                    "description": "ID of training job"
                  },
                  "params": {
                    "required": [
                      "config_params",
                      "training_params",
                      "training_type"
                    ],
                    "type": "object",
                    "properties": {
                      "training_params": {
                        "required": [
                          "fm_type",
                          "s3_data_path",
                          "s3_model_path",
                          "s3_toml_path",
                          "training_instance_type"
                        ],
                        "type": "object",
                        "properties": {
                          "s3_data_path": {
                            "type": "string"
                          },
                          "training_instance_type": {
                            "type": "string"
                          },
                          "s3_model_path": {
                            "type": "string"
                          },
                          "fm_type": {
                            "type": "string"
                          },
                          "s3_toml_path": {
                            "type": "string"
                          }
                        }
                      },
                      "training_type": {
                        "type": "string",
                        "description": "Training Type"
                      },
                      "config_params": {
                        "required": [
                          "saving_arguments",
                          "training_arguments"
                        ],
                        "type": "object",
                        "properties": {
                          "training_arguments": {
                            "required": [
                              "max_train_epochs"
                            ],
                            "type": "object",
                            "properties": {
                              "max_train_epochs": {
                                "type": "string"
                              }
                            }
                          },
                          "saving_arguments": {
                            "required": [
                              "output_name",
                              "save_every_n_epochs"
                            ],
                            "type": "object",
                            "properties": {
                              "output_name": {
                                "type": "string"
                              },
                              "save_every_n_epochs": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of training job"
                  }
                }
              },
              "message": {
                "type": "string"
              },
              "statusCode": {
                "type": "integer"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              201
            ]
          }
        }
      },
      "400": {
        "title": "Response Model 400",
        "required": [
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "requestId": {
            "type": "string",
            "description": "Request ID by API Gateway",
            "format": "uuid"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              400
            ]
          }
        },
        "description": "Bad Request"
      },
      "401": {
        "title": "Response Model 401",
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "enum": [
              "Unauthorized"
            ]
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              401
            ]
          }
        },
        "description": "Unauthorized"
      },
      "UpdateDataset": {
        "title": "UpdateDataset",
        "required": [
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "204": {
        "title": "Response Model 204",
        "type": "object",
        "properties": {},
        "additionalProperties": false,
        "description": "Schema for an API response with a 204 No Content status. Since the 204 status indicates that there is no content in the response, this schema does not define any properties for the response body."
      },
      "403": {
        "title": "Response Model 403",
        "required": [
          "message",
          "requestId"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Request ID by API Gateway",
            "format": "uuid"
          },
          "message": {
            "type": "string",
            "enum": [
              "Forbidden"
            ]
          }
        },
        "description": "Forbidden"
      },
      "UpdateCheckPoint": {
        "title": "UpdateCheckPoint",
        "type": "object",
        "properties": {
          "name": {
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^[A-Za-z][A-Za-z0-9_-]*$",
            "type": "string"
          },
          "multi_parts_tags": {
            "type": "object"
          },
          "status": {
            "type": "string",
            "description": "Status of checkpoint"
          }
        }
      },
      "404": {
        "title": "Response Model 404",
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              404
            ]
          }
        },
        "description": "Not Found"
      },
      "UpdateCheckpointResponse": {
        "title": "UpdateCheckpointResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "checkpoint"
            ],
            "type": "object",
            "properties": {
              "checkpoint": {
                "required": [
                  "id",
                  "params",
                  "s3_location",
                  "status",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "s3_location": {
                    "type": "string",
                    "format": "uri"
                  },
                  "id": {
                    "type": "string",
                    "description": "ID of checkpoint",
                    "format": "uuid"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of checkpoint",
                    "enum": [
                      "Stable-diffusion",
                      "embeddings",
                      "Lora",
                      "hypernetworks",
                      "ControlNet",
                      "VAE"
                    ]
                  },
                  "params": {
                    "required": [
                      "created",
                      "creator",
                      "message",
                      "multipart_upload"
                    ],
                    "type": "object",
                    "properties": {
                      "creator": {
                        "type": "string"
                      },
                      "multipart_upload": {
                        "type": "object"
                      },
                      "created": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of checkpoint"
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "UpdateDatasetsResponse": {
        "title": "UpdateDatasetsResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "datasetName",
              "status"
            ],
            "type": "object",
            "properties": {
              "datasetName": {
                "type": "string",
                "description": "Name of dataset"
              },
              "status": {
                "type": "string",
                "description": "Status of dataset"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "DeleteEndpoints": {
        "title": "DeleteEndpoints",
        "required": [
          "endpoint_name_list"
        ],
        "type": "object",
        "properties": {
          "endpoint_name_list": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Name of endpoint"
            }
          }
        }
      },
      "ListExecutesResponse": {
        "title": "ListExecutesResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "executes",
              "last_evaluated_key"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "executes": {
                "type": "array",
                "items": {
                  "required": [
                    "create_time",
                    "endpoint_name",
                    "need_sync",
                    "prompt_id",
                    "start_time",
                    "status"
                  ],
                  "type": "object",
                  "properties": {
                    "temp_files": {
                      "type": "array"
                    },
                    "start_time": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "output_files": {
                      "type": "array"
                    },
                    "create_time": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "endpoint_name": {
                      "type": "string",
                      "description": "Name of endpoint"
                    },
                    "output_path": {
                      "type": "string"
                    },
                    "prompt_id": {
                      "type": "string",
                      "description": "Prompt ID",
                      "format": "uuid"
                    },
                    "need_sync": {
                      "type": "boolean",
                      "description": "Need Sync"
                    },
                    "temp_path": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of Execute"
                    }
                  },
                  "additionalProperties": true
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "DeleteCheckpoints": {
        "title": "DeleteCheckpoints",
        "required": [
          "checkpoint_id_list"
        ],
        "type": "object",
        "properties": {
          "checkpoint_id_list": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "description": "ID of checkpoint",
              "format": "uuid"
            }
          }
        }
      },
      "CreateCheckPointRequest": {
        "title": "CreateCheckPoint",
        "required": [
          "checkpoint_type"
        ],
        "type": "object",
        "properties": {
          "urls": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          },
          "checkpoint_type": {
            "type": "string",
            "description": "Type of checkpoint",
            "enum": [
              "Stable-diffusion",
              "embeddings",
              "Lora",
              "hypernetworks",
              "ControlNet",
              "VAE"
            ]
          },
          "filenames": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "filename": {
                  "minLength": 1,
                  "type": "string"
                },
                "parts_number": {
                  "maximum": 100,
                  "minimum": 1,
                  "type": "integer"
                }
              }
            }
          },
          "params": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "CreateRoleResponse": {
        "title": "CreateRole",
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              201
            ]
          }
        }
      },
      "RootAPIResponse": {
        "title": "RootApi",
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        },
        "description": "Response Model RootAPIResponse"
      },
      "Execute": {
        "title": "Execute",
        "required": [
          "endpoint_name",
          "need_sync",
          "prompt",
          "prompt_id"
        ],
        "type": "object",
        "properties": {
          "number": {
            "minLength": 1,
            "type": "string"
          },
          "need_prepare": {
            "minLength": 1,
            "type": "boolean"
          },
          "extra_data": {
            "minLength": 1,
            "type": "object",
            "additionalProperties": true
          },
          "endpoint_name": {
            "type": "string",
            "description": "Name of endpoint"
          },
          "prepare_props": {
            "minItems": 1,
            "type": "object",
            "additionalProperties": true
          },
          "front": {
            "minLength": 1,
            "type": "boolean"
          },
          "prompt_id": {
            "type": "string",
            "description": "Prompt ID",
            "format": "uuid"
          },
          "prompt": {
            "minItems": 1,
            "type": "object",
            "additionalProperties": true
          },
          "need_sync": {
            "type": "boolean",
            "description": "Need Sync"
          },
          "client_id": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "StartInferenceJobAsyncResponse": {
        "title": "StartInferenceJobAsyncResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "InferenceJobId",
              "status"
            ],
            "type": "object",
            "properties": {
              "InferenceJobId": {
                "type": "string",
                "format": "uuid"
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "CropDataset": {
        "title": "CropDataset",
        "required": [
          "max_resolution"
        ],
        "type": "object",
        "properties": {
          "max_resolution": {
            "type": "string",
            "description": "Max resolution of the image, like: 512x512"
          }
        }
      },
      "UpdateCheckpointNameResponse": {
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number",
            "description": "The HTTP status code of the response."
          }
        }
      },
      "CropDatasetResponse": {
        "title": "CropDatasetResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "dataset_name"
            ],
            "type": "object",
            "properties": {
              "dataset_name": {
                "type": "string",
                "description": "Name of dataset"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              202
            ]
          }
        }
      },
      "Prepare": {
        "title": "Prepare",
        "required": [
          "endpoint_name",
          "need_reboot"
        ],
        "type": "object",
        "properties": {
          "s3_source_path": {
            "minLength": 1,
            "type": "string"
          },
          "local_target_path": {
            "minLength": 1,
            "type": "string"
          },
          "prepare_id": {
            "type": "string"
          },
          "endpoint_name": {
            "type": "string",
            "description": "Name of endpoint"
          },
          "need_reboot": {
            "type": "boolean"
          },
          "sync_script": {
            "minLength": 1,
            "type": "string"
          },
          "prepare_type": {
            "type": "string",
            "enum": [
              "default",
              "inputs",
              "nodes",
              "models",
              "custom",
              "other"
            ]
          }
        }
      },
      "CreateEndpoint": {
        "title": "CreateEndpoint",
        "required": [
          "assign_to_roles",
          "autoscaling_enabled",
          "endpoint_type",
          "initial_instance_count",
          "instance_type"
        ],
        "type": "object",
        "properties": {
          "assign_to_roles": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "endpoint_type": {
            "type": "string",
            "description": "Endpoint Type",
            "enum": [
              "Real-time",
              "Async"
            ]
          },
          "service_type": {
            "type": "string",
            "enum": [
              "sd",
              "comfy"
            ]
          },
          "min_instance_number": {
            "minimum": 0,
            "type": "number"
          },
          "cool_down_time": {
            "type": "string",
            "enum": [
              "15 minutes",
              "1 hour",
              "6 hours",
              "1 day"
            ]
          },
          "endpoint_name": {
            "type": "string",
            "description": "Name of endpoint"
          },
          "custom_docker_image_uri": {
            "type": "string"
          },
          "autoscaling_enabled": {
            "type": "boolean"
          },
          "initial_instance_count": {
            "minimum": 1,
            "type": "number"
          },
          "instance_type": {
            "type": "string",
            "description": "Instance Type"
          },
          "max_instance_number": {
            "type": "number"
          }
        }
      },
      "CreateRole": {
        "title": "CreateRole",
        "required": [
          "permissions",
          "role_name"
        ],
        "type": "object",
        "properties": {
          "role_name": {
            "minLength": 1,
            "type": "string",
            "description": "Role name"
          },
          "permissions": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "description": "List of permissions",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        }
      },
      "CreateExecuteResponse": {
        "title": "CreateExecuteResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "create_time",
              "endpoint_name",
              "inference_type",
              "need_sync",
              "output_path",
              "prompt_id",
              "start_time",
              "status"
            ],
            "type": "object",
            "properties": {
              "temp_files": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "create_time": {
                "type": "string",
                "format": "date-time"
              },
              "endpoint_name": {
                "type": "string",
                "description": "Name of endpoint"
              },
              "prompt_path": {
                "type": "string"
              },
              "need_sync": {
                "type": "boolean"
              },
              "client_id": {
                "type": "string"
              },
              "inference_type": {
                "type": "string",
                "description": "Inference type",
                "enum": [
                  "Real-time",
                  "Async"
                ]
              },
              "number": {
                "type": "integer"
              },
              "start_time": {
                "type": "string",
                "format": "date-time"
              },
              "output_files": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "instance_id": {
                "type": "string"
              },
              "extra_data": {
                "type": "object",
                "additionalProperties": true
              },
              "output_path": {
                "type": "string"
              },
              "front": {
                "type": "string"
              },
              "prompt_id": {
                "type": "string"
              },
              "temp_path": {
                "type": "string"
              },
              "status": {
                "type": "string"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              201
            ]
          }
        }
      },
      "DeleteRoles": {
        "title": "DeleteRoles",
        "required": [
          "role_name_list"
        ],
        "type": "object",
        "properties": {
          "role_name_list": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          }
        }
      },
      "CreateUser": {
        "title": "CreateUser",
        "required": [
          "username"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "Password for user"
          },
          "roles": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "description": "Roles for user",
            "items": {
              "minLength": 1,
              "type": "string"
            }
          },
          "username": {
            "minLength": 1,
            "type": "string",
            "description": "Username for user"
          }
        }
      },
      "ListEndpointsResponse": {
        "title": "ListEndpointsResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "endpoints",
              "last_evaluated_key"
            ],
            "type": "object",
            "properties": {
              "last_evaluated_key": {
                "oneOf": [
                  {
                    "type": "null",
                    "description": "Last Key for Pagination"
                  },
                  {
                    "type": "string",
                    "description": "Last Key for Pagination"
                  }
                ]
              },
              "endpoints": {
                "type": "array",
                "items": {
                  "required": [
                    "EndpointDeploymentJobId",
                    "autoscaling",
                    "current_instance_count",
                    "endpoint_name",
                    "endpoint_status",
                    "endpoint_type",
                    "instance_type",
                    "max_instance_number",
                    "min_instance_number",
                    "owner_group_or_role",
                    "service_type",
                    "startTime"
                  ],
                  "type": "object",
                  "properties": {
                    "custom_extensions": {
                      "type": "string",
                      "description": "Custom Extensions"
                    },
                    "EndpointDeploymentJobId": {
                      "pattern": "^[a-f0-9\\-]{36}$",
                      "type": "string",
                      "description": "ID of Endpoint"
                    },
                    "endpoint_name": {
                      "type": "string",
                      "description": "Name of endpoint"
                    },
                    "endpoint_status": {
                      "type": "string",
                      "description": "Status of Endpoint"
                    },
                    "owner_group_or_role": {
                      "type": "array",
                      "description": "Owner Group or Role",
                      "items": {
                        "type": "string"
                      }
                    },
                    "endpoint_type": {
                      "type": "string",
                      "description": "Endpoint Type",
                      "enum": [
                        "Real-time",
                        "Async"
                      ]
                    },
                    "service_type": {
                      "type": "string",
                      "description": "Service Type",
                      "enum": [
                        "sd",
                        "comfy"
                      ]
                    },
                    "min_instance_number": {
                      "pattern": "^[0-9]+$",
                      "type": "string",
                      "description": "Minimum number of instances"
                    },
                    "current_instance_count": {
                      "pattern": "^[0-9]+$",
                      "type": "string",
                      "description": "Current number of instances"
                    },
                    "startTime": {
                      "type": "string",
                      "description": "Start Time of Endpoint",
                      "format": "date-time"
                    },
                    "autoscaling": {
                      "type": "boolean",
                      "description": "Autoscaling"
                    },
                    "instance_type": {
                      "type": "string",
                      "description": "Instance Type"
                    },
                    "max_instance_number": {
                      "pattern": "^[0-9]+$",
                      "type": "string",
                      "description": "Maximum number of instances"
                    }
                  }
                }
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              200
            ]
          }
        }
      },
      "DeleteTrainingJobs": {
        "title": "DeleteTrainingJobs",
        "required": [
          "training_id_list"
        ],
        "type": "object",
        "properties": {
          "training_id_list": {
            "maxItems": 100,
            "minItems": 1,
            "type": "array",
            "items": {
              "pattern": "^[a-f0-9\\-]{36}$",
              "type": "string",
              "description": "ID of training job"
            }
          }
        }
      },
      "CreateCheckpointResponse": {
        "title": "CreateCheckpointResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "checkpoint",
              "s3PresignUrl"
            ],
            "type": "object",
            "properties": {
              "checkpoint": {
                "required": [
                  "id",
                  "params",
                  "s3_location",
                  "status",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "s3_location": {
                    "type": "string",
                    "description": "S3 location of the checkpoint"
                  },
                  "id": {
                    "type": "string",
                    "description": "ID of checkpoint",
                    "format": "uuid"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of checkpoint",
                    "enum": [
                      "Stable-diffusion",
                      "embeddings",
                      "Lora",
                      "hypernetworks",
                      "ControlNet",
                      "VAE"
                    ]
                  },
                  "params": {
                    "required": [
                      "created",
                      "creator",
                      "message",
                      "multipart_upload"
                    ],
                    "type": "object",
                    "properties": {
                      "creator": {
                        "type": "string"
                      },
                      "multipart_upload": {
                        "type": "object",
                        "properties": {
                          ".*": {
                            "required": [
                              "bucket",
                              "key",
                              "upload_id"
                            ],
                            "type": "object",
                            "properties": {
                              "bucket": {
                                "type": "string"
                              },
                              "upload_id": {
                                "type": "string"
                              },
                              "key": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "created": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": true
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of checkpoint"
                  }
                },
                "additionalProperties": true
              },
              "s3PresignUrl": {
                "type": "object",
                "properties": {
                  ".*": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "MergeExecute": {
        "title": "MergeExecute",
        "type": "object",
        "additionalProperties": true
      },
      "CreateDatasetResponse": {
        "title": "CreateDatasetResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "required": [
              "datasetName",
              "s3PresignUrl"
            ],
            "type": "object",
            "properties": {
              "s3PresignUrl": {
                "type": "object"
              },
              "datasetName": {
                "type": "string",
                "description": "Name of dataset"
              }
            }
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer",
            "enum": [
              201
            ]
          }
        }
      },
      "CreateInferenceJob": {
        "title": "CreateInferenceJob",
        "required": [
          "inference_type",
          "models",
          "task_type"
        ],
        "type": "object",
        "properties": {
          "inference_type": {
            "type": "string",
            "description": "Inference type",
            "enum": [
              "Real-time",
              "Async"
            ]
          },
          "custom_extensions": {
            "type": "string"
          },
          "models": {
            "type": "object",
            "properties": {
              "embeddings": {
                "type": "array"
              }
            }
          },
          "payload_string": {
            "type": "string"
          },
          "task_type": {
            "minLength": 1,
            "type": "string"
          }
        }
      },
      "504": {
        "title": "Response Model 504",
        "required": [
          "message",
          "requestId"
        ],
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Request ID by API Gateway",
            "format": "uuid"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          }
        },
        "description": "Gateway Timeout"
      },
      "CreateCheckpointUrlResponse": {
        "required": [
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      },
      "CreateInferenceJobRealtimeResponse": {
        "title": "CreateInferenceJobRealtimeResponse",
        "required": [
          "data",
          "debug",
          "message",
          "statusCode"
        ],
        "type": "object",
        "properties": {
          "debug": {
            "title": "Response Model Debug",
            "required": [
              "function_url",
              "log_url",
              "trace_url"
            ],
            "type": "object",
            "properties": {
              "trace_url": {
                "type": "string",
                "description": "URL to X-Ray Trace",
                "format": "uri"
              },
              "function_url": {
                "type": "string",
                "description": "URL to Lambda Function",
                "format": "uri"
              },
              "log_url": {
                "type": "string",
                "description": "URL to CloudWatch Logs",
                "format": "uri"
              }
            },
            "description": "Debugging information for Lambda Function"
          },
          "data": {
            "type": "object",
            "properties": {
              "owner_group_or_role": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "output_presigned_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "taskType": {
                "type": "string"
              },
              "image_names": {
                "type": "array",
                "items": {
                  "pattern": "^.+\\.*$",
                  "type": "string"
                }
              },
              "InferenceJobId": {
                "type": "string",
                "format": "uuid"
              },
              "payload_string": {
                "type": "string"
              },
              "createTime": {
                "type": "string",
                "format": "date-time"
              },
              "sagemakerRaw": {
                "type": "object"
              },
              "startTime": {
                "type": "string",
                "format": "date-time"
              },
              "params": {
                "required": [
                  "input_body_s3",
                  "sagemaker_inference_endpoint_id",
                  "sagemaker_inference_endpoint_name",
                  "sagemaker_inference_instance_type"
                ],
                "type": "object",
                "properties": {
                  "input_body_s3": {
                    "type": "string",
                    "format": "uri"
                  },
                  "sagemaker_inference_endpoint_id": {
                    "pattern": "^[a-f0-9\\-]{36}$",
                    "type": "string",
                    "description": "ID of Endpoint"
                  },
                  "input_body_presign_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "output_path": {
                    "type": "string"
                  },
                  "sagemaker_inference_instance_type": {
                    "type": "string",
                    "description": "Instance Type"
                  },
                  "sagemaker_inference_endpoint_name": {
                    "type": "string",
                    "description": "Name of endpoint"
                  }
                },
                "additionalProperties": true
              },
              "img_presigned_urls": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri"
                }
              },
              "status": {
                "type": "string"
              }
            },
            "additionalProperties": true
          },
          "message": {
            "type": "string",
            "description": "API Operate Message"
          },
          "statusCode": {
            "type": "number"
          }
        }
      },
      "DeleteDatasets": {
        "title": "DeleteDatasets",
        "required": [
          "dataset_name_list"
        ],
        "type": "object",
        "properties": {
          "dataset_name_list": {
            "maxItems": 10,
            "minItems": 1,
            "type": "array",
            "items": {
              "type": "string",
              "description": "Name of dataset"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    }
  },
  "x-amazon-apigateway-gateway-responses": {
    "BAD_REQUEST_BODY": {
      "responseTemplates": {
        "application/json": "{\"statusCode\":400,\"message\":\"$context.error.validationErrorString\",\"requestId\":\"$context.extendedRequestId\"}"
      }
    },
    "BAD_REQUEST_PARAMETERS": {
      "responseTemplates": {
        "application/json": "{\"statusCode\":400,\"message\":\"$context.error.validationErrorString\",\"requestId\":\"$context.extendedRequestId\"}"
      }
    },
    "DEFAULT_5XX": {
      "responseTemplates": {
        "application/json": "{\"message\":\"$context.error.message\",\"requestId\":\"$context.extendedRequestId\"}"
      }
    },
    "DEFAULT_4XX": {
      "responseTemplates": {
        "application/json": "{\"message\":\"$context.error.message\",\"requestId\":\"$context.extendedRequestId\"}"
      }
    }
  },
  "x-amazon-apigateway-request-validators": {
    "esdapivalidatorb43244ef-j4ky0bbhwswd": {
      "validateRequestParameters": false,
      "validateRequestBody": true
    }
  },
  "tags": [
    {
      "name": "Service",
      "description": "Service API"
    },
    {
      "name": "Roles",
      "description": "Manage Roles"
    },
    {
      "name": "Users",
      "description": "Manage Users"
    },
    {
      "name": "Endpoints",
      "description": "Manage Endpoints"
    },
    {
      "name": "Checkpoints",
      "description": "Manage Checkpoints"
    },
    {
      "name": "Inferences",
      "description": "Manage Inferences"
    },
    {
      "name": "Executes",
      "description": "Manage Executes"
    },
    {
      "name": "Datasets",
      "description": "Manage Datasets"
    },
    {
      "name": "Trainings",
      "description": "Manage Trainings"
    },
    {
      "name": "Prepare",
      "description": "Sync files to Endpoint"
    },
    {
      "name": "Sync",
      "description": "Sync Message from Endpoint"
    },
    {
      "name": "Others",
      "description": "Others API"
    }
  ]
}
