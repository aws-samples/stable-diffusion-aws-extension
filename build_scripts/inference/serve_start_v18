#!/bin/bash

trap 'echo "error_lock" > /error_lock; exit 1' ERR

if [ -f "/error_lock" ]; then
    echo "start failed, please check the log"
    sleep 30
    exit 1
fi

echo "Current shell: $SHELL"
echo "Running in $(bash --version)"

echo "---------------------------------------------------------------------------------"
cat "$0"

echo "---------------------------------------------------------------------------------"
printenv

mkdir -p ~/.aws
echo "[default]
region = $AWS_DEFAULT_REGION" > ~/.aws/config

ESD_FILE_VERSION='1.8.0-base'

echo "---------------------------------------------------------------------------------"
echo "INSTANCE_TYPE: $INSTANCE_TYPE"
echo "ENDPOINT_NAME: $ENDPOINT_NAME"
echo "ENDPOINT_ID: $ENDPOINT_ID"
echo "ESD_FILE_VERSION: $ESD_FILE_VERSION"
echo "CREATED_AT: $CREATED_AT"
created_time_seconds=$(date -d "$CREATED_AT" +%s)
current_time=$(date "+%Y-%m-%dT%H:%M:%S.%6N")
current_time_seconds=$(date -d "$current_time" +%s)
init_seconds=$(( current_time_seconds - created_time_seconds ))
echo "Now At: $current_time"
echo "Init from Create: $init_seconds seconds"

echo "---------------------------------------------------------------------------------"
instance_package="g5"
if [ "${INSTANCE_TYPE%"${INSTANCE_TYPE#ml.g4}"}" = "ml.g4" ]; then
    instance_package="g4"
fi

files_s3_path="s3://$BUCKET_NAME/$ESD_FILE_VERSION-$instance_package"
echo "files_s3_path: $files_s3_path"

total_start_at=$(date +%s)
start_at=$(date +%s)

echo "cp $files_s3_path/stable-diffusion-webui.tar ./" > commands.txt
echo "cp $files_s3_path/site-packages/llvmlite/binding/libllvmlite.so     ./llvmlite/binding/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcublas.so.11           ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcublasLt.so.11         ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcudnn_adv_infer.so.8   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcudnn_adv_train.so.8   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcudnn_cnn_infer.so.8   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcudnn_cnn_train.so.8   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcudnn_ops_infer.so.8   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libcudnn_ops_train.so.8   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libnvrtc-672ee683.so.11.2 ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libtorch_cpu.so           ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libtorch_cuda_linalg.so   ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/torch/lib/libtorch_cuda.so          ./torch/lib/" >> commands.txt
echo "cp $files_s3_path/site-packages/triton/_C/libtriton.so              ./triton/_C/" >> commands.txt
echo "cp $files_s3_path/site-packages/xformers/_C_flashattention.so       ./xformers/" >> commands.txt
echo "cp $files_s3_path/site-packages/xformers/_C.so                      ./xformers/" >> commands.txt

s5cmd --log=error run commands.txt
end_at=$(date +%s)
cost=$((end_at-start_at))
echo "download files: $cost seconds"

start_at=$(date +%s)
tar -xf stable-diffusion-webui.tar
end_at=$(date +%s)
cost=$((end_at-start_at))
echo "decompress files: $cost seconds"

start_at=$(date +%s)
#mv -f nvidia                            /home/ubuntu/stable-diffusion-webui/venv/lib/python3.10/site-packages/
mv -f llvmlite/binding/*  /home/ubuntu/stable-diffusion-webui/venv/lib/python3.10/site-packages/llvmlite/binding/
mv -f torch/lib/*         /home/ubuntu/stable-diffusion-webui/venv/lib/python3.10/site-packages/torch/lib/
mv -f triton/_C/*         /home/ubuntu/stable-diffusion-webui/venv/lib/python3.10/site-packages/triton/_C/
mv -f xformers/*          /home/ubuntu/stable-diffusion-webui/venv/lib/python3.10/site-packages/xformers/
end_at=$(date +%s)
cost=$((end_at-start_at))
echo "move files: $cost seconds"

end_at=$(date +%s)
cost=$((end_at-total_start_at))
echo "files total cost: $cost seconds"

echo "---------------------------------------------------------------------------------"
total_cost=$((cost+init_seconds))
echo "total cost: $total_cost seconds"

# if $EXTENSIONS is not empty, it will be executed
if [ -n "$EXTENSIONS" ]; then
    echo "---------------------------------------------------------------------------------"
    cd /home/ubuntu/stable-diffusion-webui/extensions/ || exit 1

    read -ra array <<< "$(echo "$EXTENSIONS" | tr "," " ")"

    for git_repo in "${array[@]}"; do
      start_at=$(date +%s)
      echo "git clone $git_repo"
      git clone "$git_repo"
      end_at=$(date +%s)
      cost=$((end_at-start_at))
      echo "git clone $git_repo: $cost seconds"
    done
fi

cd /home/ubuntu/stable-diffusion-webui || exit 1

# s5cmd
mkdir tools
cp /usr/local/bin/s5cmd ./tools/

source /home/ubuntu/stable-diffusion-webui/venv/bin/activate

echo "---------------------------------------------------------------------------------"
echo "accelerate launch..."

accelerate launch --num_cpu_threads_per_process=6 launch.py --api --listen --port 8080 --xformers --no-half-vae --skip-prepare-environment --no-download-sd-model --skip-python-version-check --skip-install --skip-version-check --no-hashing --nowebui
